name: LZ4_ZSTD_Patch_Generator
on:
  workflow_dispatch:
    inputs:
      REPO_MANIFEST:
        description: "ÈÄâÊã©Êú∫Âûã"
        required: true
        type: choice
        options:
          - 'oneplus_13'
          - 'oneplus_ace5_pro'
          - 'oneplus_13t'
          - 'oneplus_pad_2_pro'
          - 'oneplus_ace5_ultra'
          - 'realme_GT7'
          - 'realme_GT7pro'
          - 'realme_GT7pro_Speed'
        default: 'oneplus_13'


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚öôÔ∏è ËÆæÁΩÆÊú∫ÂûãÁéØÂ¢ÉÂèòÈáè
        run: |
          case "${{ github.event.inputs.REPO_MANIFEST }}" in
            oneplus_ace5_pro)
              echo "REPO_MANIFEST=JiuGeFaCai_oneplus_ace5_pro_v" >> $GITHUB_ENV
              echo "DEVICES_NAME=oneplus_ace5_pro" >> $GITHUB_ENV
              ;;
            oneplus_13)
              echo "REPO_MANIFEST=JiuGeFaCai_oneplus_13_v" >> $GITHUB_ENV
              echo "DEVICES_NAME=oneplus_13" >> $GITHUB_ENV
              ;;
            *)
              echo "REPO_MANIFEST=${{ github.event.inputs.REPO_MANIFEST }}" >> $GITHUB_ENV
              echo "DEVICES_NAME=${{ github.event.inputs.REPO_MANIFEST }}" >> $GITHUB_ENV
              ;;
          esac

      - name: üì¶ ÂÆâË£Ö‰æùËµñÔºàÂê´ÁõëÊéßÂ∑•ÂÖ∑Ôºâ
        run: |
          sudo rm -f /var/lib/apt/lists/lock /var/lib/dpkg/lock
          sudo apt update -y
          sudo apt install -y \
            git ccache inotify-tools strace coreutils python3 python3-pip \
            build-essential libelf-dev flex bison libssl-dev
          sudo apt remove -y repo || true
          echo "‚úÖ ‰æùËµñÂÆâË£ÖÂÆåÊàê"

      - name: üì• ÂÆâË£ÖÊúÄÊñ∞ÁâàRepoÂ∑•ÂÖ∑
        run: |
          REPO_BIN_DIR="/home/runner/bin"
          mkdir -p "$REPO_BIN_DIR"
          export PATH="$REPO_BIN_DIR:$PATH"
          
          curl -fL https://storage.googleapis.com/git-repo-downloads/repo > "$REPO_BIN_DIR/repo"
          chmod a+x "$REPO_BIN_DIR/repo"
          sed -i 's/import datetime/import datetime\nfrom datetime import UTC/' "$REPO_BIN_DIR/repo"
          sed -i 's/datetime.datetime.utcnow()/datetime.datetime.now(UTC)/g' "$REPO_BIN_DIR/repo"
          
          hash -r
          if command -v repo &> /dev/null; then
            echo "‚úÖ repoÂÆâË£ÖÊàêÂäüÔºö$(which repo)"
          else
            echo "‚ùå repoÂÆâË£ÖÂ§±Ë¥•"
            exit 1
          fi

      - name: üì• ÂêåÊ≠•ÂÜÖÊ†∏Ê∫êÁ†ÅÔºàÂº∫ÂåñÈ™åËØÅÔºâ
        run: |
          export PATH="/home/runner/bin:$PATH"
          mkdir -p kernel_workspace && cd kernel_workspace
          
          # ÂàùÂßãÂåñrepoÂπ∂ÊòæÁ§∫ËØ¶ÁªÜÊó•Âøó
          repo init -u https://github.com/showdo/kernel_manifest.git \
            -b refs/heads/oneplus/sm8750 \
            -m ${REPO_MANIFEST}.xml \
            --depth=1 || { echo "‚ùå repo initÂ§±Ë¥•"; exit 1; }
          
          # ÂêåÊ≠•Ê∫êÁ†ÅÔºàÂ¢ûÂä†ÈáçËØïÊú∫Âà∂Ôºâ
          for i in {1..3}; do
            repo sync -c -j$(nproc) --no-tags --no-clone-bundle && break
            if [ $i -eq 3 ]; then
              echo "‚ùå repo syncÈáçËØï3Ê¨°Â§±Ë¥•"
              exit 1
            fi
            echo "‚ö†Ô∏è repo syncÂ§±Ë¥•ÔºåÈáçËØïÁ¨¨$iÊ¨°"
            sleep 5
          done
          
          # Âº∫Âà∂È™åËØÅÊ†∏ÂøÉÁõÆÂΩïÊòØÂê¶Â≠òÂú®
          COMMON_DIR="kernel_platform/common"
          if [ ! -d "$COMMON_DIR" ]; then
            echo "‚ùå Ê†∏ÂøÉÁõÆÂΩï‰∏çÂ≠òÂú®Ôºö$COMMON_DIR"
            echo "ÂΩìÂâçÁõÆÂΩïÁªìÊûÑÔºö"
            ls -la
            ls -la kernel_platform || true  # ÊòæÁ§∫kernel_platform‰∏ãÁöÑÂÜÖÂÆπ
            exit 1
          fi
          echo "‚úÖ Ê∫êÁ†ÅÂêåÊ≠•ÂÆåÊàêÔºåÊ†∏ÂøÉÁõÆÂΩïÂ≠òÂú®"

      - name: üîç ÁõëÊéßÂπ∂ÁîüÊàêLZ4/ZSTDË°•‰∏ÅÔºàÂê´Ê±áÁºñÊñá‰ª∂Ôºâ
        run: |
          # ÂÆö‰πâË∑ØÂæÑÔºàÂü∫‰∫éÂêåÊ≠•ÂêéÁöÑÂÆûÈôÖÁªìÊûÑÔºâ
          COMMON_DIR="kernel_workspace/kernel_platform/common"
          LZ4_DIR="$COMMON_DIR/lib/lz4"
          ZSTD_DIR="$COMMON_DIR/lib/zstd"
          BACKUP_DIR="${GITHUB_WORKSPACE}/lz4_zstd_backup"
          PATCH_DIR="${GITHUB_WORKSPACE}/lz4_zstd_patches"
          MONITOR_LOG="${GITHUB_WORKSPACE}/monitor_logs"
          mkdir -p "$BACKUP_DIR" "$PATCH_DIR" "$MONITOR_LOG"

          # -------------------------- ‰øÆÂ§ç1ÔºöÈÖçÁΩÆGitÁî®Êà∑Ë∫´‰ªΩÔºàÂÖ≥ÈîÆÔºâ --------------------------
          echo "üìã ÈÖçÁΩÆGitÁî®Êà∑Ë∫´‰ªΩ"
          cd "$COMMON_DIR"
          git config user.email "action@github.com"  # Â±ÄÈÉ®ÈÖçÁΩÆÔºå‰ªÖÂΩìÂâç‰ªìÂ∫ìÁîüÊïà
          git config user.name "GitHub Action"       # ÈÅøÂÖçÂÖ®Â±ÄÈÖçÁΩÆÈóÆÈ¢ò

          # -------------------------- 1. Â§á‰ªΩÂéüÂßãÊñá‰ª∂ --------------------------
          echo "üìã Â§á‰ªΩLZ4/ZSTDÂéüÂßãÊñá‰ª∂"
          find "$LZ4_DIR" -type f \( -name "*.c" -o -name "*.h" -o -name "*.s" -o -name "Makefile" -o -name "*.mk" \) | while read -r file; do
            rel_path="${file#$COMMON_DIR/}"
            mkdir -p "$BACKUP_DIR/$(dirname "$rel_path")"
            cp "$file" "$BACKUP_DIR/$rel_path"
            echo "‚úÖ Â§á‰ªΩLZ4Êñá‰ª∂Ôºö$rel_path"
          done
          
          find "$ZSTD_DIR" -type f \( -name "*.c" -o -name "*.h" -o -name "*.s" -o -name "Makefile" -o -name "*.mk" \) | while read -r file; do
            rel_path="${file#$COMMON_DIR/}"
            mkdir -p "$BACKUP_DIR/$(dirname "$rel_path")"
            cp "$file" "$BACKUP_DIR/$rel_path"
            echo "‚úÖ Â§á‰ªΩZSTDÊñá‰ª∂Ôºö$rel_path"
          done

          # -------------------------- 2. ÂêØÂä®ÁõëÊéß --------------------------
          echo "üîç ÂêØÂä®ÁõëÊéß"
          INOTIFY_LOG="$MONITOR_LOG/inotify.log"
          inotifywait -m -r \
            --timefmt "%Y-%m-%d %H:%M:%S" \
            --format "%T %e %w%f" \
            -e create -e delete -e modify -e move \
            "$LZ4_DIR" "$ZSTD_DIR" > "$INOTIFY_LOG" 2>&1 &
          INOTIFY_PID=$!
          echo "inotifyÁõëÊéßPIDÔºö$INOTIFY_PID"
          
          # ËÆ∞ÂΩïGitÂü∫ÂáÜÁä∂ÊÄÅÔºàÁé∞Âú®Â∑≤ÈÖçÁΩÆÁî®Êà∑Ë∫´‰ªΩÔºå‰∏ç‰ºöÊä•ÈîôÔºâ
          cd "$COMMON_DIR"
          git add -A
          git commit -m "Initial state before main.bin" || true  # ÂÖÅËÆ∏Á©∫Êèê‰∫§
          INIT_COMMIT=$(git rev-parse HEAD)
          echo "gitÂü∫ÂáÜÊèê‰∫§Ôºö$INIT_COMMIT"

          # -------------------------- 3. ÊâßË°åmain.bin --------------------------
          echo "üîß ÊâßË°åmain.bin"
          # ‰øÆÂ§ç2ÔºöÂº∫Âà∂È™åËØÅÁõÆÂΩïÂ≠òÂú®ÂêéÂÜçÊâßË°å
          if [ ! -d "$COMMON_DIR" ]; then
            echo "‚ùå ÁõÆÂΩï‰∏çÂ≠òÂú®Ôºö$COMMON_DIR"
            exit 1
          fi
          cd "$COMMON_DIR"
          
          MAIN_BIN_PATH="${GITHUB_WORKSPACE}/.github/workflows/Bin/main.bin"
          if [ ! -f "$MAIN_BIN_PATH" ]; then
            echo "‚ùå Êú™ÊâæÂà∞main.binÔºö$MAIN_BIN_PATH"
            exit 1
          fi
          cp "$MAIN_BIN_PATH" ./
          chmod +x main.bin
          
          STRACE_LOG="$MONITOR_LOG/strace.log"
          strace -f -e trace=file -o "$STRACE_LOG" ./main.bin "setup_lz4"
          
          kill $INOTIFY_PID
          rm -f main.bin

          # -------------------------- 4. ÂàÜÊûêÁªìÊûú --------------------------
          echo "üìä ÂàÜÊûêÊîπÂä®Êñá‰ª∂"
          git diff "$INIT_COMMIT" --name-only | grep -E "^lib/lz4/|^lib/zstd/" > "$MONITOR_LOG/git_changed.txt"
          grep -E "$LZ4_DIR|$ZSTD_DIR" "$INOTIFY_LOG" | awk '{print $3}' | sed "s|$COMMON_DIR/||" >> "$MONITOR_LOG/inotify_changed.txt"
          grep -E "$LZ4_DIR|$ZSTD_DIR" "$STRACE_LOG" | awk -F'"' '{print $2}' | sed "s|$COMMON_DIR/||" >> "$MONITOR_LOG/strace_changed.txt"
          
          cat "$MONITOR_LOG/git_changed.txt" "$MONITOR_LOG/inotify_changed.txt" "$MONITOR_LOG/strace_changed.txt" \
            | sort | uniq | grep -E "^lib/lz4/|^lib/zstd/" > "$MONITOR_LOG/all_changed.txt"
          
          echo "=== Ê£ÄÊµãÂà∞ÁöÑÊîπÂä®Êñá‰ª∂ ==="
          cat "$MONITOR_LOG/all_changed.txt"

          # -------------------------- 5. ÁîüÊàêË°•‰∏Å --------------------------
          echo "üî® ÁîüÊàêË°•‰∏Å"
          while read -r file; do
            if [ -f "$BACKUP_DIR/$file" ] && [ -f "$COMMON_DIR/$file" ]; then
              patch_filename="$(echo "$file" | tr '/' '_').patch"
              diff -u -w "$BACKUP_DIR/$file" "$COMMON_DIR/$file" > "$PATCH_DIR/$patch_filename"
              if [ -s "$PATCH_DIR/$patch_filename" ]; then
                echo "‚úÖ ÁîüÊàêË°•‰∏ÅÔºö$patch_filename"
              else
                rm "$PATCH_DIR/$patch_filename"
              fi
            elif [ ! -f "$BACKUP_DIR/$file" ] && [ -f "$COMMON_DIR/$file" ]; then
              new_file_path="$PATCH_DIR/$file"
              mkdir -p "$(dirname "$new_file_path")"
              cp "$COMMON_DIR/$file" "$new_file_path"
              echo "‚úÖ ‰øùÂ≠òÊñ∞Â¢ûÊñá‰ª∂Ôºö$file"
            fi
          done < "$MONITOR_LOG/all_changed.txt"

      - name: üì§ ‰∏ä‰º†‰∫ßÁâ©
        uses: actions/upload-artifact@v4
        with:
          name: lz4_zstd_patches_with_asm_${{ env.DEVICES_NAME }}
          path: |
            ./lz4_zstd_patches/
            ./monitor_logs/
          retention-days: 365
